name: CI

on: 
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    #strategy:
    #  matrix:
    #    node: [ 18, 19, 20]

    steps: 
    - uses: actions/checkout@v5

    #- name: Setup node |  ${{ matrix.node }}
    - name: Setup node
      uses: actions/setup-node@v5
      with:
        #  node-version: ${{ matrix.node }}
          node-version: 18
          cache: 'npm'  # Alterado para usar cache do npm
      
    - run: npm ci     # Usa npm ci para instalação mais rápida e confiável
      
    - run: npm test   # Executa os testes usando npm

    - name: Generate tag
      id: generate_tag
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with: 
        role-to-assume: arn:aws:iam::656003592068:role/ecr_role
        # role-to-assume: ''
        aws-region: us-east-2

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2


    - name: Build docker image
      id: build-docker-image
      env: 
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}

      run: |
        docker build -t $REGISTRY/rocketseat-ci:$TAG .
        docker push $REGISTRY/rocketseat-ci:$TAG
        IMAGE=$(echo $REGISTRY/rocketseat-ci:$TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT

    - name: Deploy to App Runner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        service: rocketseat-api
        image: 656003592068.dkr.ecr.us-east-2.amazonaws.com/rocketseat-ci:95e3016
        access-role-arn: arn:aws:iam::656003592068:role/app-runner-role
        region: us-east-2
        cpu: 1
        memory: 1
        port: 3000


    # - name: Push image
    #   run: |
    #     docker push gabifran/rocketseat-ci-api:${{ steps.generate_tag.outputs.sha }}

